/*
 * Copyright (c) 2013. All rights Reserved by williamleung2006@gmail.com
 */

package solocompany.utils;

import org.junit.Test;

import java.nio.ByteBuffer;

import static org.junit.Assert.assertEquals;

/**
 * HexDumpTest.
 *
 * @author <a href="mailto:williamleung2006@gmail.com">William Leung</a>
 */
public class HexDumpTest {

    @Test
    public void testDumpEmpty() {
        assertEquals("", HexDump.dump("".getBytes()).toString());
    }


    @Test
    public void testDump() {
        assertEquals(""
                + "0000: 61 62 63 01             -                         | abc.\n",
                HexDump.dump("abc\1".getBytes()).toString());
    }


    @Test
    public void testDumpWithPositionMarker() {
        ByteBuffer data = ByteBuffer.wrap("abc\1".getBytes());
        data.position(1);
        assertEquals(""
                + "0000: 61<62 63 01             -                         | abc.\n",
                HexDump.dump(data).toString());
    }


    private static final byte[] TEST_DATA = (""
            + "0#######0#######"
            + "1#######1#######"
            + "2#######2#######"
            + "3#######3#######"
            + "4#######4#######"
            + "5#######5#######"
            + "6#######6#######"
            + "7#######7#######"
            + "8#######8#######"
            + "9#######9#######"
            + "A#######A#######"
            + "B#######B#######"
            + "C#######C#######"
            + "D#######D#######"
            + "E#######E#######"
            + "F#######F#######"
            + "z#######z###"
            + "").getBytes();


    @Test
    public void testDumpWithSkips() {
        ByteBuffer data = ByteBuffer.wrap(TEST_DATA);

        assertEquals(""
                + "0000: 30 23 23 23 23 23 23 23 - 30 23 23 23 23 23 23 23 | 0#######0#######\n"
                + "0010: 31 23 23 23 23 23 23 23 - 31 23 23 23 23 23 23 23 | 1#######1#######\n"
                + "0020: 32 23 23 23 23 23 23 23 - 32 23 23 23 23 23 23 23 | 2#######2#######\n"
                + "0030: 33 23 23 23 23 23 23 23 - 33 23 23 23 23 23 23 23 | 3#######3#######\n"
                + "0040: 34 23 23 23 23 23 23 23 - 34 23 23 23 23 23 23 23 | 4#######4#######\n"
                + "0050: 35 23 23 23 23 23 23 23 - 35 23 23 23 23 23 23 23 | 5#######5#######\n"
                + "0060: 36 23 23 23 23 23 23 23 - 36 23 23 23 23 23 23 23 | 6#######6#######\n"
                + "0070: 37 23 23 23 23 23 23 23 - 37 23 23 23 23 23 23 23 | 7#######7#######\n"
                + "0080: 38 23 23 23 23 23 23 23 - 38 23 23 23 23 23 23 23 | 8#######8#######\n"
                + "0090: 39 23 23 23 23 23 23 23 - 39 23 23 23 23 23 23 23 | 9#######9#######\n"
                + "00a0: 41 23 23 23 23 23 23 23 - 41 23 23 23 23 23 23 23 | A#######A#######\n"
                + "00b0: 42 23 23 23 23 23 23 23 - 42 23 23 23 23 23 23 23 | B#######B#######\n"
                + "00c0: 43 23 23 23 23 23 23 23 - 43 23 23 23 23 23 23 23 | C#######C#######\n"
                + "00d0: 44 23 23 23 23 23 23 23 - 44 23 23 23 23 23 23 23 | D#######D#######\n"
                + "00e0: 45 23 23 23 23 23 23 23 - 45 23 23 23 23 23 23 23 | E#######E#######\n"
                + "00f0: 46 23 23 23 23 23 23 23 - 46 23 23 23 23 23 23 23 | F#######F#######\n"
                + "0100: 7a 23 23 23 23 23 23 23 - 7a 23 23 23             | z#######z###\n"
                + "",
                HexDump.dump(data).toString());


        assertEquals(""
                + "0000: 30 23 23 23 23 23 23 23 - 30 23 23 23 23 23 23 23 | 0#######0#######\n"
                + "0010: 31 23 23 23 23 23 23 23 - 31 23 23 23 23 23 23 23 | 1#######1#######\n"
                + "0020: 32 23 23 23 23 23 23 23 - 32 23 23 23 23 23 23 23 | 2#######2#######\n"
                + "0030: 33 23 23 23 23 23 23 23 - 33 23 23 23 23 23 23 23 | 3#######3#######\n"
                + "****: omitting 160 bytes\n"
                + "00e0: 45 23 23 23 23 23 23 23 - 45 23 23 23 23 23 23 23 | E#######E#######\n"
                + "00f0: 46 23 23 23 23 23 23 23 - 46 23 23 23 23 23 23 23 | F#######F#######\n"
                + "0100: 7a 23 23 23 23 23 23 23 - 7a 23 23 23             | z#######z###\n"
                + "",
                HexDump.dump(data, 0).toString());


        assertEquals(""
                + "0000: 30<23 23 23 23 23 23 23 - 30 23 23 23 23 23 23 23 | 0#######0#######\n"
                + "0010: 31 23 23 23 23 23 23 23 - 31 23 23 23 23 23 23 23 | 1#######1#######\n"
                + "0020: 32 23 23 23 23 23 23 23 - 32 23 23 23 23 23 23 23 | 2#######2#######\n"
                + "0030: 33 23 23 23 23 23 23 23 - 33 23 23 23 23 23 23 23 | 3#######3#######\n"
                + "****: omitting 160 bytes\n"
                + "00e0: 45 23 23 23 23 23 23 23 - 45 23 23 23 23 23 23 23 | E#######E#######\n"
                + "00f0: 46 23 23 23 23 23 23 23 - 46 23 23 23 23 23 23 23 | F#######F#######\n"
                + "0100: 7a 23 23 23 23 23 23 23 - 7a 23 23 23             | z#######z###\n"
                + "",
                HexDump.dump((ByteBuffer) data.position(1), 0).toString());


        assertEquals(""
                + "0000: 30 23 23 23 23 23 23 23 - 30 23 23 23 23 23 23 23 | 0#######0#######\n"
                + "0010: 31 23 23 23 23 23 23 23 - 31 23 23 23 23 23 23 23 | 1#######1#######\n"
                + "0020:<32 23 23 23 23 23 23 23 - 32 23 23 23 23 23 23 23 | 2#######2#######\n"
                + "0030: 33 23 23 23 23 23 23 23 - 33 23 23 23 23 23 23 23 | 3#######3#######\n"
                + "****: omitting 160 bytes\n"
                + "00e0: 45 23 23 23 23 23 23 23 - 45 23 23 23 23 23 23 23 | E#######E#######\n"
                + "00f0: 46 23 23 23 23 23 23 23 - 46 23 23 23 23 23 23 23 | F#######F#######\n"
                + "0100: 7a 23 23 23 23 23 23 23 - 7a 23 23 23             | z#######z###\n"
                + "",
                HexDump.dump((ByteBuffer) data.position(32), 0).toString());


        assertEquals(""
                + "0000: 30 23 23 23 23 23 23 23 - 30 23 23 23 23 23 23 23 | 0#######0#######\n"
                + "0010: 31 23 23 23 23 23 23 23 - 31 23 23 23 23 23 23 23 | 1#######1#######\n"
                + "0020: 32<23 23 23 23 23 23 23 - 32 23 23 23 23 23 23 23 | 2#######2#######\n"
                + "0030: 33 23 23 23 23 23 23 23 - 33 23 23 23 23 23 23 23 | 3#######3#######\n"
                + "0040: 34 23 23 23 23 23 23 23 - 34 23 23 23 23 23 23 23 | 4#######4#######\n"
                + "****: omitting 144 bytes\n"
                + "00e0: 45 23 23 23 23 23 23 23 - 45 23 23 23 23 23 23 23 | E#######E#######\n"
                + "00f0: 46 23 23 23 23 23 23 23 - 46 23 23 23 23 23 23 23 | F#######F#######\n"
                + "0100: 7a 23 23 23 23 23 23 23 - 7a 23 23 23             | z#######z###\n"
                + "",
                HexDump.dump((ByteBuffer) data.position(33), 0).toString());


        assertEquals(""
                + "0000: 30 23 23 23 23 23 23 23 - 30 23 23 23 23 23 23 23 | 0#######0#######\n"
                + "0010: 31 23 23 23 23 23 23 23 - 31 23 23 23 23 23 23 23 | 1#######1#######\n"
                + "0020: 32 23 23 23 23 23 23 23 - 32 23 23 23 23 23 23 23 | 2#######2#######\n"
                + "0030: 33 23 23 23 23 23 23 23 - 33 23 23 23 23 23 23 23 | 3#######3#######\n"
                + "0040:<34 23 23 23 23 23 23 23 - 34 23 23 23 23 23 23 23 | 4#######4#######\n"
                + "0050: 35 23 23 23 23 23 23 23 - 35 23 23 23 23 23 23 23 | 5#######5#######\n"
                + "****: omitting 128 bytes\n"
                + "00e0: 45 23 23 23 23 23 23 23 - 45 23 23 23 23 23 23 23 | E#######E#######\n"
                + "00f0: 46 23 23 23 23 23 23 23 - 46 23 23 23 23 23 23 23 | F#######F#######\n"
                + "0100: 7a 23 23 23 23 23 23 23 - 7a 23 23 23             | z#######z###\n"
                + "",
                HexDump.dump((ByteBuffer) data.position(64), 0).toString());


        assertEquals(""
                + "0000: 30 23 23 23 23 23 23 23 - 30 23 23 23 23 23 23 23 | 0#######0#######\n"
                + "0010: 31 23 23 23 23 23 23 23 - 31 23 23 23 23 23 23 23 | 1#######1#######\n"
                + "0020: 32 23 23 23 23 23 23 23 - 32 23 23 23 23 23 23 23 | 2#######2#######\n"
                + "0030: 33 23 23 23 23 23 23 23 - 33 23 23 23 23 23 23 23 | 3#######3#######\n"
                + "0040: 34 23 23 23 23 23 23 23 - 34 23 23 23 23 23 23<23 | 4#######4#######\n"
                + "0050: 35 23 23 23 23 23 23 23 - 35 23 23 23 23 23 23 23 | 5#######5#######\n"
                + "0060: 36 23 23 23 23 23 23 23 - 36 23 23 23 23 23 23 23 | 6#######6#######\n"
                + "****: omitting 112 bytes\n"
                + "00e0: 45 23 23 23 23 23 23 23 - 45 23 23 23 23 23 23 23 | E#######E#######\n"
                + "00f0: 46 23 23 23 23 23 23 23 - 46 23 23 23 23 23 23 23 | F#######F#######\n"
                + "0100: 7a 23 23 23 23 23 23 23 - 7a 23 23 23             | z#######z###\n"
                + "",
                HexDump.dump((ByteBuffer) data.position(79), 0).toString());


        assertEquals(""
                + "0000: 30 23 23 23 23 23 23 23 - 30 23 23 23 23 23 23 23 | 0#######0#######\n"
                + "0010: 31 23 23 23 23 23 23 23 - 31 23 23 23 23 23 23 23 | 1#######1#######\n"
                + "0020: 32 23 23 23 23 23 23 23 - 32 23 23 23 23 23 23 23 | 2#######2#######\n"
                + "0030: 33 23 23 23 23 23 23 23 - 33 23 23 23 23 23 23 23 | 3#######3#######\n"
                + "0040: 34 23 23 23 23 23 23 23 - 34 23 23 23 23 23 23 23 | 4#######4#######\n"
                + "0050:<35 23 23 23 23 23 23 23 - 35 23 23 23 23 23 23 23 | 5#######5#######\n"
                + "0060: 36 23 23 23 23 23 23 23 - 36 23 23 23 23 23 23 23 | 6#######6#######\n"
                + "****: omitting 112 bytes\n"
                + "00e0: 45 23 23 23 23 23 23 23 - 45 23 23 23 23 23 23 23 | E#######E#######\n"
                + "00f0: 46 23 23 23 23 23 23 23 - 46 23 23 23 23 23 23 23 | F#######F#######\n"
                + "0100: 7a 23 23 23 23 23 23 23 - 7a 23 23 23             | z#######z###\n"
                + "",
                HexDump.dump((ByteBuffer) data.position(80), 0).toString());


        assertEquals(""
                + "0000: 30 23 23 23 23 23 23 23 - 30 23 23 23 23 23 23 23 | 0#######0#######\n"
                + "0010: 31 23 23 23 23 23 23 23 - 31 23 23 23 23 23 23 23 | 1#######1#######\n"
                + "0020: 32 23 23 23 23 23 23 23 - 32 23 23 23 23 23 23 23 | 2#######2#######\n"
                + "0030: 33 23 23 23 23 23 23 23 - 33 23 23 23 23 23 23 23 | 3#######3#######\n"
                + "0040: 34 23 23 23 23 23 23 23 - 34 23 23 23 23 23 23 23 | 4#######4#######\n"
                + "0050: 35 23 23 23 23 23 23 23 - 35 23 23 23 23 23 23<23 | 5#######5#######\n"
                + "0060: 36 23 23 23 23 23 23 23 - 36 23 23 23 23 23 23 23 | 6#######6#######\n"
                + "0070: 37 23 23 23 23 23 23 23 - 37 23 23 23 23 23 23 23 | 7#######7#######\n"
                + "****: omitting 96 bytes\n"
                + "00e0: 45 23 23 23 23 23 23 23 - 45 23 23 23 23 23 23 23 | E#######E#######\n"
                + "00f0: 46 23 23 23 23 23 23 23 - 46 23 23 23 23 23 23 23 | F#######F#######\n"
                + "0100: 7a 23 23 23 23 23 23 23 - 7a 23 23 23             | z#######z###\n"
                + "",
                HexDump.dump((ByteBuffer) data.position(95), 0).toString());


        assertEquals(""
                + "0000: 30 23 23 23 23 23 23 23 - 30 23 23 23 23 23 23 23 | 0#######0#######\n"
                + "0010: 31 23 23 23 23 23 23 23 - 31 23 23 23 23 23 23 23 | 1#######1#######\n"
                + "****: omitting 32 bytes\n"
                + "0040: 34 23 23 23 23 23 23 23 - 34 23 23 23 23 23 23 23 | 4#######4#######\n"
                + "0050: 35 23 23 23 23 23 23 23 - 35 23 23 23 23 23 23 23 | 5#######5#######\n"
                + "0060:<36 23 23 23 23 23 23 23 - 36 23 23 23 23 23 23 23 | 6#######6#######\n"
                + "0070: 37 23 23 23 23 23 23 23 - 37 23 23 23 23 23 23 23 | 7#######7#######\n"
                + "****: omitting 96 bytes\n"
                + "00e0: 45 23 23 23 23 23 23 23 - 45 23 23 23 23 23 23 23 | E#######E#######\n"
                + "00f0: 46 23 23 23 23 23 23 23 - 46 23 23 23 23 23 23 23 | F#######F#######\n"
                + "0100: 7a 23 23 23 23 23 23 23 - 7a 23 23 23             | z#######z###\n"
                + "",
                HexDump.dump((ByteBuffer) data.position(96), 0).toString());


        assertEquals(""
                + "0000: 30 23 23 23 23 23 23 23 - 30 23 23 23 23 23 23 23 | 0#######0#######\n"
                + "0010: 31 23 23 23 23 23 23 23 - 31 23 23 23 23 23 23 23 | 1#######1#######\n"
                + "****: omitting 32 bytes\n"
                + "0040: 34 23 23 23 23 23 23 23 - 34 23 23 23 23 23 23 23 | 4#######4#######\n"
                + "0050: 35 23 23 23 23 23 23 23 - 35 23 23 23 23 23 23 23 | 5#######5#######\n"
                + "0060: 36<23 23 23 23 23 23 23 - 36 23 23 23 23 23 23 23 | 6#######6#######\n"
                + "0070: 37 23 23 23 23 23 23 23 - 37 23 23 23 23 23 23 23 | 7#######7#######\n"
                + "0080: 38 23 23 23 23 23 23 23 - 38 23 23 23 23 23 23 23 | 8#######8#######\n"
                + "****: omitting 80 bytes\n"
                + "00e0: 45 23 23 23 23 23 23 23 - 45 23 23 23 23 23 23 23 | E#######E#######\n"
                + "00f0: 46 23 23 23 23 23 23 23 - 46 23 23 23 23 23 23 23 | F#######F#######\n"
                + "0100: 7a 23 23 23 23 23 23 23 - 7a 23 23 23             | z#######z###\n"
                + "",
                HexDump.dump((ByteBuffer) data.position(97), 0).toString());


        assertEquals(""
                + "0000: 30 23 23 23 23 23 23 23 - 30 23 23 23 23 23 23 23 | 0#######0#######\n"
                + "0010: 31 23 23 23 23 23 23 23 - 31 23 23 23 23 23 23 23 | 1#######1#######\n"
                + "****: omitting 96 bytes\n"
                + "0080: 38 23 23 23 23 23 23 23 - 38 23 23 23 23 23 23 23 | 8#######8#######\n"
                + "0090: 39 23 23 23 23 23 23 23 - 39 23 23 23 23 23 23 23 | 9#######9#######\n"
                + "00a0:<41 23 23 23 23 23 23 23 - 41 23 23 23 23 23 23 23 | A#######A#######\n"
                + "00b0: 42 23 23 23 23 23 23 23 - 42 23 23 23 23 23 23 23 | B#######B#######\n"
                + "****: omitting 32 bytes\n"
                + "00e0: 45 23 23 23 23 23 23 23 - 45 23 23 23 23 23 23 23 | E#######E#######\n"
                + "00f0: 46 23 23 23 23 23 23 23 - 46 23 23 23 23 23 23 23 | F#######F#######\n"
                + "0100: 7a 23 23 23 23 23 23 23 - 7a 23 23 23             | z#######z###\n"
                + "",
                HexDump.dump((ByteBuffer) data.position(160), 0).toString());


        assertEquals(""
                + "0000: 30 23 23 23 23 23 23 23 - 30 23 23 23 23 23 23 23 | 0#######0#######\n"
                + "0010: 31 23 23 23 23 23 23 23 - 31 23 23 23 23 23 23 23 | 1#######1#######\n"
                + "****: omitting 96 bytes\n"
                + "0080: 38 23 23 23 23 23 23 23 - 38 23 23 23 23 23 23 23 | 8#######8#######\n"
                + "0090: 39 23 23 23 23 23 23 23 - 39 23 23 23 23 23 23 23 | 9#######9#######\n"
                + "00a0: 41<23 23 23 23 23 23 23 - 41 23 23 23 23 23 23 23 | A#######A#######\n"
                + "00b0: 42 23 23 23 23 23 23 23 - 42 23 23 23 23 23 23 23 | B#######B#######\n"
                + "00c0: 43 23 23 23 23 23 23 23 - 43 23 23 23 23 23 23 23 | C#######C#######\n"
                + "00d0: 44 23 23 23 23 23 23 23 - 44 23 23 23 23 23 23 23 | D#######D#######\n"
                + "00e0: 45 23 23 23 23 23 23 23 - 45 23 23 23 23 23 23 23 | E#######E#######\n"
                + "00f0: 46 23 23 23 23 23 23 23 - 46 23 23 23 23 23 23 23 | F#######F#######\n"
                + "0100: 7a 23 23 23 23 23 23 23 - 7a 23 23 23             | z#######z###\n"
                + "",
                HexDump.dump((ByteBuffer) data.position(161), 0).toString());


        assertEquals(""
                + "0000: 30 23 23 23 23 23 23 23 - 30 23 23 23 23 23 23 23 | 0#######0#######\n"
                + "0010: 31 23 23 23 23 23 23 23 - 31 23 23 23 23 23 23 23 | 1#######1#######\n"
                + "****: omitting 112 bytes\n"
                + "0090: 39 23 23 23 23 23 23 23 - 39 23 23 23 23 23 23 23 | 9#######9#######\n"
                + "00a0: 41 23 23 23 23 23 23 23 - 41 23 23 23 23 23 23 23 | A#######A#######\n"
                + "00b0: 42 23 23 23 23 23 23 23 - 42 23 23 23 23 23 23<23 | B#######B#######\n"
                + "00c0: 43 23 23 23 23 23 23 23 - 43 23 23 23 23 23 23 23 | C#######C#######\n"
                + "00d0: 44 23 23 23 23 23 23 23 - 44 23 23 23 23 23 23 23 | D#######D#######\n"
                + "00e0: 45 23 23 23 23 23 23 23 - 45 23 23 23 23 23 23 23 | E#######E#######\n"
                + "00f0: 46 23 23 23 23 23 23 23 - 46 23 23 23 23 23 23 23 | F#######F#######\n"
                + "0100: 7a 23 23 23 23 23 23 23 - 7a 23 23 23             | z#######z###\n"
                + "",
                HexDump.dump((ByteBuffer) data.position(191), 0).toString());


        assertEquals(""
                + "0000: 30 23 23 23 23 23 23 23 - 30 23 23 23 23 23 23 23 | 0#######0#######\n"
                + "0010: 31 23 23 23 23 23 23 23 - 31 23 23 23 23 23 23 23 | 1#######1#######\n"
                + "****: omitting 128 bytes\n"
                + "00a0: 41 23 23 23 23 23 23 23 - 41 23 23 23 23 23 23 23 | A#######A#######\n"
                + "00b0: 42 23 23 23 23 23 23 23 - 42 23 23 23 23 23 23 23 | B#######B#######\n"
                + "00c0: 43 23 23 23 23 23 23 23 - 43 23 23 23 23 23 23<23 | C#######C#######\n"
                + "00d0: 44 23 23 23 23 23 23 23 - 44 23 23 23 23 23 23 23 | D#######D#######\n"
                + "00e0: 45 23 23 23 23 23 23 23 - 45 23 23 23 23 23 23 23 | E#######E#######\n"
                + "00f0: 46 23 23 23 23 23 23 23 - 46 23 23 23 23 23 23 23 | F#######F#######\n"
                + "0100: 7a 23 23 23 23 23 23 23 - 7a 23 23 23             | z#######z###\n"
                + "",
                HexDump.dump((ByteBuffer) data.position(207), 0).toString());


        assertEquals(""
                + "0000: 30 23 23 23 23 23 23 23 - 30 23 23 23 23 23 23 23 | 0#######0#######\n"
                + "0010: 31 23 23 23 23 23 23 23 - 31 23 23 23 23 23 23 23 | 1#######1#######\n"
                + "****: omitting 144 bytes\n"
                + "00b0: 42 23 23 23 23 23 23 23 - 42 23 23 23 23 23 23 23 | B#######B#######\n"
                + "00c0: 43 23 23 23 23 23 23 23 - 43 23 23 23 23 23 23 23 | C#######C#######\n"
                + "00d0: 44 23 23 23 23 23 23 23 - 44 23 23 23 23 23 23<23 | D#######D#######\n"
                + "00e0: 45 23 23 23 23 23 23 23 - 45 23 23 23 23 23 23 23 | E#######E#######\n"
                + "00f0: 46 23 23 23 23 23 23 23 - 46 23 23 23 23 23 23 23 | F#######F#######\n"
                + "0100: 7a 23 23 23 23 23 23 23 - 7a 23 23 23             | z#######z###\n"
                + "",
                HexDump.dump((ByteBuffer) data.position(223), 0).toString());


        assertEquals(""
                + "0000: 30 23 23 23 23 23 23 23 - 30 23 23 23 23 23 23 23 | 0#######0#######\n"
                + "0010: 31 23 23 23 23 23 23 23 - 31 23 23 23 23 23 23 23 | 1#######1#######\n"
                + "****: omitting 160 bytes\n"
                + "00c0: 43 23 23 23 23 23 23 23 - 43 23 23 23 23 23 23 23 | C#######C#######\n"
                + "00d0: 44 23 23 23 23 23 23 23 - 44 23 23 23 23 23 23 23 | D#######D#######\n"
                + "00e0:<45 23 23 23 23 23 23 23 - 45 23 23 23 23 23 23 23 | E#######E#######\n"
                + "00f0: 46 23 23 23 23 23 23 23 - 46 23 23 23 23 23 23 23 | F#######F#######\n"
                + "0100: 7a 23 23 23 23 23 23 23 - 7a 23 23 23             | z#######z###\n"
                + "",
                HexDump.dump((ByteBuffer) data.position(224), 0).toString());


        assertEquals(""
                + "0000: 30 23 23 23 23 23 23 23 - 30 23 23 23 23 23 23 23 | 0#######0#######\n"
                + "0010: 31 23 23 23 23 23 23 23 - 31 23 23 23 23 23 23 23 | 1#######1#######\n"
                + "****: omitting 160 bytes\n"
                + "00c0: 43 23 23 23 23 23 23 23 - 43 23 23 23 23 23 23 23 | C#######C#######\n"
                + "00d0: 44 23 23 23 23 23 23 23 - 44 23 23 23 23 23 23 23 | D#######D#######\n"
                + "00e0: 45 23 23 23 23 23 23 23 - 45 23 23 23 23 23 23 23 | E#######E#######\n"
                + "00f0: 46 23 23 23 23 23 23 23 - 46 23 23 23 23 23 23 23 | F#######F#######\n"
                + "0100: 7a 23 23 23 23 23 23 23 - 7a 23 23<23             | z#######z###\n"
                + "",
                HexDump.dump((ByteBuffer) data.position(267), 0).toString());
    }


    @Test
    public void testDumpForThresholdSize() {
        ByteBuffer data = ByteBuffer.wrap(TEST_DATA);

        assertEquals(""
                + "0000: 30 23 23 23 23 23 23 23 - 30 23 23 23 23 23 23 23 | 0#######0#######\n"
                + "0010: 31 23 23 23 23 23 23 23 - 31 23 23 23 23 23 23 23 | 1#######1#######\n"
                + "0020: 32 23 23 23 23 23 23 23 - 32 23 23 23 23 23 23 23 | 2#######2#######\n"
                + "0030: 33 23 23 23 23 23 23 23 - 33 23 23 23 23 23 23 23 | 3#######3#######\n"
                + "",
                HexDump.dump(ByteBuffer.wrap(data.array(), 0, 64), 0).toString());

        assertEquals(""
                + "0000: 30 23 23 23 23 23 23 23 - 30 23 23 23 23 23 23 23 | 0#######0#######\n"
                + "0010: 31 23 23 23 23 23 23 23 - 31 23 23 23 23 23 23 23 | 1#######1#######\n"
                + "0020: 32 23 23 23 23 23 23 23 - 32 23 23 23 23 23 23 23 | 2#######2#######\n"
                + "0030: 33 23 23 23 23 23 23 23 - 33 23 23 23 23 23 23 23 | 3#######3#######\n"
                + "0040: 34 23 23 23 23 23 23 23 - 34 23 23 23 23 23 23 23 | 4#######4#######\n"
                + "0050: 35 23 23 23 23 23 23 23 - 35 23 23 23 23 23 23 23 | 5#######5#######\n"
                + "0060: 36 23 23 23 23 23 23 23 - 36 23 23 23 23 23 23 23 | 6#######6#######\n"
                + "0070: 37                      -                         | 7\n"
                + "",
                HexDump.dump(ByteBuffer.wrap(data.array(), 0, 113), 0).toString());

        assertEquals(""
                + "0000: 30 23 23 23 23 23 23 23 - 30 23 23 23 23 23 23 23 | 0#######0#######\n"
                + "0010: 31 23 23 23 23 23 23 23 - 31 23 23 23 23 23 23 23 | 1#######1#######\n"
                + "0020: 32 23 23 23 23 23 23 23 - 32 23 23 23 23 23 23 23 | 2#######2#######\n"
                + "0030: 33 23 23 23 23 23 23 23 - 33 23 23 23 23 23 23 23 | 3#######3#######\n"
                + "0040: 34 23 23 23 23 23 23 23 - 34 23 23 23 23 23 23 23 | 4#######4#######\n"
                + "0050: 35 23 23 23 23 23 23 23 - 35 23 23 23 23 23 23 23 | 5#######5#######\n"
                + "0060: 36 23 23 23 23 23 23 23 - 36 23 23 23 23 23 23 23 | 6#######6#######\n"
                + "0070: 37 23 23 23 23 23 23 23 - 37 23 23 23 23 23 23    | 7#######7######\n"
                + "",
                HexDump.dump(ByteBuffer.wrap(data.array(), 0, 127), 0).toString());

        assertEquals(""
                + "0000: 30 23 23 23 23 23 23 23 - 30 23 23 23 23 23 23 23 | 0#######0#######\n"
                + "0010: 31 23 23 23 23 23 23 23 - 31 23 23 23 23 23 23 23 | 1#######1#######\n"
                + "0020: 32 23 23 23 23 23 23 23 - 32 23 23 23 23 23 23 23 | 2#######2#######\n"
                + "0030: 33 23 23 23 23 23 23 23 - 33 23 23 23 23 23 23 23 | 3#######3#######\n"
                + "0040: 34 23 23 23 23 23 23 23 - 34 23 23 23 23 23 23 23 | 4#######4#######\n"
                + "0050: 35 23 23 23 23 23 23 23 - 35 23 23 23 23 23 23 23 | 5#######5#######\n"
                + "0060: 36 23 23 23 23 23 23 23 - 36 23 23 23 23 23 23 23 | 6#######6#######\n"
                + "0070: 37 23 23 23 23 23 23 23 - 37 23 23 23 23 23<23    | 7#######7######\n"
                + "",
                HexDump.dump((ByteBuffer) ByteBuffer.wrap(data.array(), 0, 127).position(126), 0).toString());

        assertEquals(""
                + "0000: 30 23 23 23 23 23 23 23 - 30 23 23 23 23 23 23 23 | 0#######0#######\n"
                + "0010: 31 23 23 23 23 23 23 23 - 31 23 23 23 23 23 23 23 | 1#######1#######\n"
                + "0020: 32 23 23 23 23 23 23 23 - 32 23 23 23 23 23 23 23 | 2#######2#######\n"
                + "0030: 33 23 23 23 23 23 23 23 - 33 23 23 23 23 23 23 23 | 3#######3#######\n"
                + "****: omitting 32 bytes\n"
                + "0060: 36 23 23 23 23 23 23 23 - 36 23 23 23 23 23 23 23 | 6#######6#######\n"
                + "0070: 37 23 23 23 23 23 23 23 - 37 23 23 23 23 23 23 23 | 7#######7#######\n"
                + "",
                HexDump.dump(ByteBuffer.wrap(data.array(), 0, 128), 0).toString());

        assertEquals(""
                + "0000: 30 23 23 23 23 23 23 23 - 30 23 23 23 23 23 23 23 | 0#######0#######\n"
                + "0010: 31 23 23 23 23 23 23 23 - 31 23 23 23 23 23 23 23 | 1#######1#######\n"
                + "****: omitting 32 bytes\n"
                + "0040: 34 23 23 23 23 23 23 23 - 34 23 23 23 23 23 23 23 | 4#######4#######\n"
                + "0050: 35 23 23 23 23 23 23 23 - 35 23 23 23 23 23 23 23 | 5#######5#######\n"
                + "0060: 36 23 23 23 23 23 23 23 - 36 23 23 23 23 23 23 23 | 6#######6#######\n"
                + "0070: 37 23 23 23 23 23 23 23 - 37 23 23 23 23 23 23<23 | 7#######7#######\n"
                + "",
                HexDump.dump((ByteBuffer) ByteBuffer.wrap(data.array(), 0, 128).position(127), 0).toString());


        assertEquals(""
                + "0000: 30 23 23 23 23 23 23 23 - 30 23 23 23 23 23 23 23 | 0#######0#######\n"
                + "0010: 31 23 23 23 23 23 23 23 - 31 23 23 23 23 23 23 23 | 1#######1#######\n"
                + "0020: 32 23 23 23 23 23 23 23 - 32 23 23 23 23 23 23 23 | 2#######2#######\n"
                + "0030: 33 23 23 23 23 23 23 23 - 33 23 23 23 23 23 23 23 | 3#######3#######\n"
                + "0040: 34 23 23 23 23 23 23 23 - 34 23 23 23 23 23 23 23 | 4#######4#######\n"
                + "0050: 35<23 23 23 23 23 23 23 - 35 23 23 23 23 23 23 23 | 5#######5#######\n"
                + "0060: 36 23 23 23 23 23 23 23 - 36 23 23 23 23 23 23 23 | 6#######6#######\n"
                + "0070: 37 23 23 23 23 23 23 23 - 37 23 23 23 23 23 23 23 | 7#######7#######\n"
                + "0080: 38 23 23 23 23 23 23 23 - 38 23 23 23 23 23 23 23 | 8#######8#######\n"
                + "0090: 39 23 23 23 23 23 23 23 - 39 23 23 23 23 23 23 23 | 9#######9#######\n"
                + "00a0: 41 23 23 23 23 23 23 23 - 41 23 23 23 23 23 23 23 | A#######A#######\n"
                + "00b0: 42 23 23 23 23 23 23 23 - 42 23 23 23 23 23 23    | B#######B######\n"
                + "",
                HexDump.dump((ByteBuffer) ByteBuffer.wrap(data.array(), 0, 191).position(81), 0).toString());
    }
}
